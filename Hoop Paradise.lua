if not game:IsLoaded() then
    game.Loaded:Wait();
end
          
-- >  Config ig
local Config = {    
	WindowName = "sinkZ#6982 : : : Hoop Paradise",
	Color = Color3.fromRGB(255, 10, 60),
	Keybind = Enum.KeyCode.L
}

-- >  gay vars
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/AlexR32/Bracket/main/BracketV3.lua"))()
local Window = Library:CreateWindow(Config, game:GetService("CoreGui"))

-- >  Tab vars
local MainExploits = Window:CreateTab("Main")
local UserInputServiceettings = Window:CreateTab("Ui Settings")

-- >  Section vars
local Aim = MainExploits:CreateSection("Aim")
local Misc = MainExploits:CreateSection("Misc")
local visuals = MainExploits:CreateSection("Visuals")
local MainUiSettings = UserInputServiceettings:CreateSection("Ui Settings")


-- >  Get vars
local Workspace = game:GetService("Workspace")
local UserInputService = game:GetService("UserInputService")

-- >  Player vars
local Player = game:GetService("Players").LocalPlayer
local Character = Player.Character or Player.CharacterAdded:Wait();
local Humanoid = Character.Humanoid


-- >  Stat vars
local OwnerShipOfBall = false
local Holding = false



-- >  In range Gui extremely ugly code
local ScreenGui = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local inRang3 = Instance.new("TextLabel")
local outOfRang3 = Instance.new("TextLabel")

ScreenGui.Parent = game.CoreGui
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

Frame.Parent = ScreenGui
Frame.BackgroundColor3 = Color3.fromRGB(74, 74, 74)
Frame.BorderSizePixel = 2
Frame.Visible = false 
Frame.Position = UDim2.new(0.449462175, 0, 0.0139563363, 0)
Frame.Size = UDim2.new(0, 196, 0, 58)

inRang3.Name = "inRang3"
inRang3.Parent = Frame
inRang3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
inRang3.BackgroundTransparency = 1.000
inRang3.Position = UDim2.new(0.0783672705, 0, 0.194137976, 0)
inRang3.Size = UDim2.new(0, 166, 0, 35)
inRang3.Visible = false
inRang3.Font = Enum.Font.GothamSemibold
inRang3.Text = "In Range"
inRang3.TextColor3 = Color3.fromRGB(0, 255, 38)
inRang3.TextScaled = true
inRang3.TextSize = 18.000
inRang3.TextStrokeTransparency = -0.010
inRang3.TextWrapped = true

outOfRang3.Name = "outOfRang3"
outOfRang3.Parent = Frame
outOfRang3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
outOfRang3.BackgroundTransparency = 1.000
outOfRang3.Position = UDim2.new(0.0783672705, 0, 0.194137976, 0)
outOfRang3.Size = UDim2.new(0, 166, 0, 35)
outOfRang3.Visible = false
outOfRang3.Font = Enum.Font.GothamSemibold
outOfRang3.Text = "Out of Range"
outOfRang3.TextColor3 = Color3.fromRGB(255, 0, 0)
outOfRang3.TextScaled = true
outOfRang3.TextSize = 18.000
outOfRang3.TextStrokeTransparency = 0.000
outOfRang3.TextWrapped = true


-- >  Re-parent key things that can improve performance and accesbility 
for i,v in pairs(Workspace["_Game"]["_Courts"]["_Courts [1v1]"]:GetDescendants()) do
    if v.Name == "Rim" then
        v.Parent = Workspace
        v.Name = "ReparentedRimPart"
    end
end 

for i,v in pairs(Workspace["_Practice"]:GetDescendants()) do
    if v.Name == "Rim" then
        v.Parent = Workspace
        v.Name = "ReparentedRimPart"
    end
end

function FindClosestPart(position)

    local Part, closestPartMagnitude, DistanceMagnitude
    
    for i,v in pairs(Workspace:GetChildren()) do
        if v.Name == "ReparentedRimPart" then
            if Part then
                DistanceMagnitude = (position - v.Position).Magnitude

                if DistanceMagnitude < closestPartMagnitude then
                    Part = v
                    closestPartMagnitude = DistanceMagnitude
                end

            else            
                Part = v
                closestPartMagnitude = (position - v.Position).Magnitude
            end
        end
    end
    return Part
end

--[[function FindClosestBall(position) -- > not needed until I've fixed ball mag

end]]


local ToggleInRangeIndicator = Aim:CreateToggle("Toggle In Range Indicator", nil, function(IndicatorState)

    _G.IndicatorIsToggled = IndicatorState

    if _G.IndicatorIsToggled then
        
        Frame.Visible = true

    else

        Frame.Visible = false
    end
end)

task.spawn(function() -- > Looks ugly, can't help it
    while true do
        task.wait()

        local ClosestRimPosition = FindClosestPart(Character.HumanoidRootPart.Position) -- > First Var set
        local IsDistance = (ClosestRimPosition.Position - Character.HumanoidRootPart.Position).Magnitude -- > First Var set

        if Character:FindFirstChild("Ball") then

            if IsDistance < 52.2 and IsDistance > 40 then

                inRang3.Visible = true
                outOfRang3.Visible = false 

            else

                inRang3.Visible = false
                outOfRang3.Visible = true 
            end
        end
    end
end)

local ClosestRimPosition = FindClosestPart(Character.HumanoidRootPart.Position) -- > Weird but works

local silentAimToggle = Aim:CreateToggle("Silent Aim", nil, function(SilentAimState)

    _G.IsToggled = SilentAimState

    UserInputService.InputBegan:Connect(function(Input, gameProcessed)

        if not gameProcessed and Input.KeyCode == Enum.KeyCode.Space and _G.IsToggled then
    
            Holding = true
    
            local Distance = (ClosestRimPosition.Position - Character.HumanoidRootPart.Position).Magnitude -- > Second Var set [Not great]
            local FindClosest = FindClosestPart(Character.HumanoidRootPart.Position).Position -- > Second Var set [Not great]

            print(Distance) -- > Debug
    
            local Argument1 = FindClosest + Vector3.new(0, 0, 0) -- >  Base Arguments to FireServer
            local Argument2 = 85 -- > 85 Max power
    
            repeat task.wait(0.1)
    
                --[[if Distance < 53.5 and Distance > 52.5 then
    
                    Argument1 = FindClosest + Vector3.new(0, 42, 0) 
    
                elseif Distance < 52.5 and Distance > 51.5 then
    
                    Argument1 = FindClosest + Vector3.new(0, 44, 0)]]

                if Distance < 52.2 and Distance > 51.5 then

                    Argument1 = FindClosest + Vector3.new(0, 44, 0)
                    
                elseif Distance < 51.5 and Distance > 51 then
    
                    Argument1 = FindClosest + Vector3.new(0, 48, 0)

                elseif Distance < 51 and Distance > 50.5 then
    
                    Argument1 = FindClosest + Vector3.new(0, 49.5, 0)

                elseif Distance < 50.5 and Distance > 50 then
    
                    Argument1 = FindClosest + Vector3.new(0, 51, 0)
    
                elseif Distance < 50 and Distance > 48 then
    
                    Argument1 = FindClosest + Vector3.new(0, 52, 0)
    
                elseif Distance < 48 and Distance > 46 then
    
                    Argument1 = FindClosest + Vector3.new(0, 56.5, 0)
    
                elseif Distance < 46 and Distance > 42.5 then
    
                    Argument1 = FindClosest + Vector3.new(0, 58, 0)
    
                elseif Distance < 42.5 and Distance > 40 then
    
                    Argument1 = FindClosest + Vector3.new(0, 62, 0)
                end
    
                Workspace[Player.Name].Ball.shoot:FireServer(Argument1, Argument2)
    
            until Holding == false
        end
    end)

    UserInputService.InputEnded:Connect(function(Input, gameProcessed)
        if not gameProcessed and Input.KeyCode == Enum.KeyCode.Space then
            Holding = false
        end
    end)
end)

--[[local BallMagToggle = Misc:CreateToggle("Ball Mag", nil, function(BallMagState) -- > working on this 
    
    _G.BallMagIsActive = BallMagState

    if _G.BallMagState then -- > I wrote this very poorly ; Probably Re-writing it fully
        while true do
            task.wait()  

            --local Distance = (ClosestRimPosition.Position - Character.HumanoidRootPart.Position).Magnitude
            local VariableFindB = FindClosestBall(Character.HumanoidRootPart.Position)

            --print(VariableFindB)

            for i,v in pairs(Workspace:GetDescendants()) do
                if v.Name == "TouchInterest" and v.Parent == "Ball" then
                    firetouchinterest(Character.HumanoidRootPart, v.Parent, 0)
                    task.wait()
                    firetouchinterest(Character.HumanoidRootPart, v.Parent, 1)
                end
            end
        end 
    end
end)]]


local toggleUI = MainUiSettings:CreateToggle("UI Toggle", nil, function(State)
	Window:Toggle(State)
end)

toggleUI:CreateKeybind(tostring(Config.Keybind):gsub("Enum.KeyCode.", ""), function(Key)
	Config.Keybind = Enum.KeyCode[Key]
end)

toggleUI:SetState(true)

local Colorpicker3 = MainUiSettings:CreateColorpicker("UI Color", function(Color)
	Window:ChangeColor(Color)
end)

Colorpicker3:UpdateColor(Config.Color)

local Colorpicker4 = MainUiSettings:CreateColorpicker("Color", function(Color)
	Window:SetBackgroundColor(Color)
end)
Colorpicker4:UpdateColor(Color3.new(1,1,1))

local Slider3 = MainUiSettings:CreateSlider("Transparency",0,1,nil,false, function(Value)
	Window:SetBackgroundTransparency(Value)
end)
Slider3:SetValue(0)

local Slider4 = MainUiSettings:CreateSlider("Tile Scale",0,1,nil,false, function(Value)
	Window:SetTileScale(Value)
end)

Slider4:SetValue(0.5)

local Dropdown3 = MainUiSettings:CreateDropdown("Image", {"Default","Hearts","Abstract","Hexagon","Circles","Lace With Flowers","Floral"}, function(Name)
	if Name == "Default" then
		Window:SetBackground("2151741365")
	elseif Name == "Hearts" then
		Window:SetBackground("6073763717")
	elseif Name == "Abstract" then
		Window:SetBackground("6073743871")
	elseif Name == "Hexagon" then
		Window:SetBackground("6073628839")
	elseif Name == "Circles" then
		Window:SetBackground("6071579801")
	elseif Name == "Lace With Flowers" then
		Window:SetBackground("6071575925")
	elseif Name == "Floral" then
		Window:SetBackground("5553946656")
	end
end)

Dropdown3:SetOption("Default")
