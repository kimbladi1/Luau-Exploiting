if not game:IsLoaded() then
    game.Loaded:Wait();
end

getgenv().Settings = {
    Enabled = true,
    Locking = false,
}

local UserInputService = game:GetService("UserInputService")

local Players = game:GetService("Players")
local Player = Players.LocalPlayer
local Character = Player.Character or Player.CharacterAdded:Wait(); 

local Mouse = Player:GetMouse()
local CurrentCamera = workspace.CurrentCamera

GetPart = function()

    local ClosestPlayer = nil
    local ClosestDistance = math.huge

    for i,v in next, workspace:GetChildren() do 
		if v.Name == "Part" and v:IsA("Part") then
			
            local ScreenPosition, IsVisible = CurrentCamera:WorldToViewportPoint(v.Position)

            if IsVisible then  
                local Distance = (Vector2.new(Mouse.X, Mouse.Y) - Vector2.new(ScreenPosition.X, ScreenPosition.Y)).Magnitude

                if Distance < ClosestDistance then  
                    ClosestPlayer = v
                    ClosestDistance = Distance
                end
            end
        end
    end
    return ClosestPlayer
end

UserInputService.InputBegan:Connect(function(Input, GameProcessed)
    if Input.KeyCode == Enum.KeyCode.E and not GameProcessed then
        if not getgenv().Settings.Enabled then return end ; getgenv().Settings.Locking = true   

        while task.wait() do
            if not getgenv().Settings.Locking then return end
            CurrentCamera.CFrame = CFrame.new(CurrentCamera.CFrame.Position, GetPart().Position)
        end
    end
end)

UserInputService.InputEnded:Connect(function(Input) 
    if Input.KeyCode == Enum.KeyCode.E then
        getgenv().Settings.Locking = false
    end
end)

print("na")
