--[[
	Date : 2023 - 02 - 07 [22:22]
	Fix Date : 2023 - 02 - 08 
	What is it? : Fuck u faggot
	Things to fix : Nothing but Visibility check has to be fixed.
	Things to add : Esp?, More misc stuff if i feel like breaking game, maybe remote spam : UwU : 
	Update : Date 2023 - 02 - 08 [14:07] Won't fix visibilty checks since it deosn't want to cooperate. Aimbot prediction kinda fixed? 	
	Added after Update : Anti Aimlock / Anti silent aim (accounts for all Aimbots that pends on velocity) and Fixed some shit with the code
]]

--[[
	Patch notes : {
		Updated Aimbot prediction for aimlock and silent aim
		Updated fps draining [no more]
		Added anti aimlock
	}
]]


if not game:IsLoaded() then
    game.Loaded:Wait()
end

local Get = setmetatable({},{
    __index = function(n, k)
        return game:GetService(k)
    end,
})

getgenv().Settings = {
    Enabled = false,

    __TargetPart = "",

    __SilentAimToggled = false,
    __AimlockToggled = false,
    __AllowAimlock = false,
    __AntiAim = false,

    __PredictionAmount = 0,
    __FakeYVector = -50,
    __FpsUnlockerToggled = false,

    __HighlightEspToggled = false
}

local Config = {
    WindowName = " [ Da Hood Rev Trainer ] | [ Made By : sinkZ#6982 ] ",
    Color = Color3.fromRGB(255,128,64),
    Keybind = Enum.KeyCode.RightBracket
}

local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/AlexR32/Bracket/main/BracketV3.lua"))()
local Window = Library:CreateWindow(Config, Get.CoreGui)

local __Tab1 = Window:CreateTab("Main")
local __Tab2 = Window:CreateTab("UI Settings")

local __AimSection = __Tab1:CreateSection("Aimbots")
local __MiscSection = __Tab1:CreateSection("Miscellaneous")
local __SettingsSection = __Tab2:CreateSection("Settings Section")

local RunService = Get.RunService
local UserInputService = Get.UserInputService
local Players = Get.Players
local Player = Players.LocalPlayer
local Character = Player.Character or Player.CharacterAdded:Wait()

local Mouse = Player:GetMouse()
local Camera = workspace.CurrentCamera

local Highlight = Instance.new("Highlight")
Highlight.Name = "Highlight"

--[[__PlayerVisible = function(TargetPlayer : Instance?) -- not working
    local ClosestPlayer = TargetPlayer
    local ClosestCharacter = ClosestPlayer.Character
    if not (ClosestCharacter or ClosestPlayer) then continue end
    local ClosestTargetPart = ClosestCharacter:FindFirstChild(getgenv().Settings.__TargetPart)
    if not (ClosestTargetPart) then continue end
    local CastPoints, IgnoreList = {ClosestTargetPart.Position, Character, ClosestCharacter}, {Character, ClosestCharacter}
    local TargetObscuring = #GetPartsObscuringTarget(Camera, CastPoints, IgnoreList)
    return ((TargetObscuring == 0 and true) or (TargetObscuring > 0 and false))
end]]

--[[__PlayerOnScreen = function(Vector : Vector3) -- skidded from another silent aim
    local Vec3, OnScreen = Camera.WorldToScreenPoint(Camera, Vector)
    return Vector2.new(Vec3.X, Vec3.Y), OnScreen
end]]

__PlayerHitScanAllowed = function(TargetPlayer : Instance?) 
    if (TargetPlayer ~= Player
    and TargetPlayer.Character
    and TargetPlayer.Character.HumanoidRootPart
    and TargetPlayer.Character:FindFirstChild("Humanoid")
    and TargetPlayer.Character.Humanoid.Health ~= 0) then
        return true 
    else
        return false 
    end
end

__GetClosestPlayer = function()
    local ClosestPlayer = nil
    local ClosestDistance = math.huge

    for i,v in next, Players:GetPlayers() do 
        if __PlayerHitScanAllowed(v) then 
            local ScreenPosition, OnScreen = Camera:WorldToViewportPoint(v.Character.HumanoidRootPart.Position) 

            local Distance = (Vector2.new(Mouse.X, Mouse.Y) - Vector2.new(ScreenPosition.X, ScreenPosition.Y)).Magnitude

            if OnScreen then
                if Distance < ClosestDistance then  
                    ClosestPlayer = v
                    ClosestDistance = Distance    
                end
            end
        end
    end
    return (ClosestPlayer)
end

__SetPrediction = function()
    return (__GetClosestPlayer().Character.HumanoidRootPart.Velocity / getgenv().Settings.__PredictionAmount)
end

__AntiAimKin = function()
    local oldVelocity = Character.HumanoidRootPart.Velocity
    Character.HumanoidRootPart.Velocity = Vector3.new(oldVelocity.X, getgenv().Settings.__FakeYVector, oldVelocity.Z)
    Character.HumanoidRootPart.Velocity = Vector3.new(oldVelocity.X, oldVelocity.Y, oldVelocity.Z)
    Character.HumanoidRootPart.Velocity = Vector3.new(oldVelocity.X, getgenv().Settings.__FakeYVector, oldVelocity.Z)
    Character:WaitForChild("Humanoid", 100).HipHeight = math.random(1.2, 4)
end

--[[local AimbotTargetTextBox = __AimSection:CreateTextBox("Target Part", "", false, function(StringObject)
    getgenv().Settings.__TargetPart = StringObject
end)]]

local PredictionSlider = __AimSection:CreateSlider("Aimbot Prediction Strength", 1, 4, nil, false, function(PredictionValue)
    getgenv().Settings.__PredictionAmount = PredictionValue * 2
end)

PredictionSlider:SetValue(3)

local SilentAimToggle = __AimSection:CreateToggle("Silent Aim", nil, function(SilentAimToggled : boolean?)
    getgenv().Settings.__SilentAimToggled = SilentAimToggled 

    local __OldIndex = nil   
     __OldIndex = hookmetamethod(game, "__index", newcclosure(function(Self, Index) 
        if (Self:IsA("Mouse")) and (getgenv().Settings.__SilentAimToggled) and (Index == "Hit") or (Index == "Target") then
            --return (Index == "Hit" and __GetClosestPlayer().Character.HumanoidRootPart.CFrame + Vector3.new(__GetClosestPlayer().Character.HumanoidRootPart.Velocity.X / 5, __GetClosestPlayer().Character.HumanoidRootPart.Velocity.X / 7, __GetClosestPlayer().Character.HumanoidRootPart.Velocity.Z / 5))
            return (Index == "Hit" and __GetClosestPlayer().Character:FindFirstChild(getgenv().Settings.__TargetPart).CFrame + __SetPrediction()) -- Temp fix for shitty prediction calculations : i don't kno math
        end
        return __OldIndex(Self, Index)
    end))
end)

local AimlockToggle = __AimSection:CreateToggle("Aimlock", nil, function(AimlockToggled : boolean?)
    getgenv().Settings.__AllowAimlock = AimlockToggled
end)

local TargetDropDown = __AimSection:CreateDropdown("Target Part", {"Head", "HumanoidRootPart", "LowerTorso", "RightLowerArm", "LeftLowerArm", "RightFoot", "LeftFoot"}, function(StringObject)
    getgenv().Settings.__TargetPart = StringObject
end)

TargetDropDown:SetOption("Head")

UserInputService.InputBegan:Connect(function(Input : Instance?, GameProcessed : boolean?)
    if Input.UserInputType == Enum.UserInputType.MouseButton2 and not GameProcessed then
        getgenv().Settings.__AimlockToggled = true

        while task.wait() do
            if not (getgenv().Settings.__AllowAimlock) then break end
            if not (getgenv().Settings.__AimlockToggled) then break end
            Camera.CFrame = CFrame.new(Camera.CFrame.Position, __GetClosestPlayer().Character:FindFirstChild(getgenv().Settings.__TargetPart).Position + __SetPrediction()) 
        end
    end
end)

UserInputService.InputEnded:Connect(function(Input : Instance?) 
    if Input.UserInputType == Enum.UserInputType.MouseButton2 then
        getgenv().Settings.__AimlockToggled = false
    end
end)

local UnlockFpsToggle = __MiscSection:CreateToggle("Unlock Fps", nil, function(FpsUnlockerToggled : boolean?)
    getgenv().Settings.__FpsUnlockerToggled = FpsUnlockerToggled 

    if getgenv().Settings.__FpsUnlockerToggled then
        setfpscap(240)
    else
        setfpscap(60)
    end
end)

local AntiAimToggle = __MiscSection:CreateToggle("Anti Aim", nil, function(AntiAimToggled : boolean?)
    getgenv().Settings.__AntiAim = AntiAimToggled

    if not (getgenv().Settings.__AntiAim) then
		Character.Humanoid.HipHeight = 2
	end

    while task.wait() do
        if not (getgenv().Settings.__AntiAim) then continue end
        __AntiAimKin()
    end
end)

--[[local HighlightEspToggle = __MiscSection:CreateToggle("Highlight Esp", nil, function(EspToggled)
    getgenv().Settings.__HighlightEspToggled = EspToggled
    
    for i,v in next, Players:GetPlayers() do
        if __PlayerHitScanAllowed(v) then
            repeat task.wait() until v.Character

            if not (getgenv().Settings.__HighlightEspToggled) then break end

            if not v.Character.HumanoidRootPart:FindFirstChild("Highlight") then
                local CloneHighlight = Highlight:Clone()
                CloneHighlight.Adornee = v.Character
                CloneHighlight.Parent = v.Character.HumanoidRootPart
                CloneHighlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
                CloneHighlight.Name = "Highlight"
            end
        end
    end

    local RenderSteppedConnection = RunService.RenderStepped:Connect(function()
        for i,v in next, Players:GetPlayers() do
            if __PlayerHitScanAllowed(v) then

                if not (getgenv().Settings.__HighlightEspToggled) then RenderSteppedConnection:Disconnect() end

                if not v.Character.HumanoidRootPart:FindFirstChild("Highlight") then
                    local CloneHighlight = Highlight:Clone()
                    CloneHighlight.Adornee = v.Character
                    CloneHighlight.Parent = v.Character.HumanoidRootPart
                    CloneHighlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
                    CloneHighlight.Name = "Highlight"
                    task.wait()
                end
            end
        end
    end)  

    local PlayerAddedConnection = Players.PlayerAdded:Connect(function(player)
        player.CharacterAdded:Connect(function(character)
            if __PlayerHitScanAllowed(player) then
                repeat task.wait() until player.Character
    
                if not (getgenv().Settings.__HighlightEspToggled) then PlayerAddedConnection:Disconnect() end
    
                if not player.Character.HumanoidRootPart:FindFirstChild("Highlight") then
                    local CloneHighlight = Highlight:Clone()
                    CloneHighlight.Adornee = v.Character
                    CloneHighlight.Parent = v.Character.HumanoidRootPart
                    CloneHighlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
                    CloneHighlight.Name = "Highlight"
                end
            end
        end)
    end)
end)

Players.PlayerRemoving:Connect(function(player)
    if Player.Character.HumanoidRootPart:FindFirstChild("Highlight") then
        player.Character.HumanoidRootPart:FindFirstChild("Highlight"):Destroy()
    end
end)]]

print("executed!")
