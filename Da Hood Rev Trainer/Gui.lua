local Config = {
    WindowName = " [ Da Hood Rev Trainer ] | [ Made By : sinkZ#6982 ] ",
	  Color = Color3.fromRGB(255,128,64),
	  Keybind = Enum.KeyCode.RightBracket
}

local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/AlexR32/Roblox/main/BracketV3.lua"))()
local Window = Library:CreateWindow(Config, game:GetService("CoreGui"))

local __Tab1 = Window:CreateTab("Main")
local __Tab2 = Window:CreateTab("UI Settings")

local __MainSection = Tab1:CreateSection("Main Section")
local __SettingsSection = Tab1:CreateSection("Settings Section")

--[[setfpscap(240)

getgenv().Settings = {
	Enabled = true,
	BypassAntiLock = false -- Inverts Hit CFrame and ignores the Y velocity 
}]]

local Players = game:GetService("Players")
local Player = Players.LocalPlayer

local __Mouse = Player:GetMouse()
local __Camera = workspace.CurrentCamera
	
local GetClosestPlayer = function()
    local ClosestPlayer = nil
    local ClosestDistance = math.huge

    for i,v in next, Players:GetPlayers() do 
        if v ~= Player and v.Character and v.Character.FindFirstChild(v.Character, "Humanoid") and v.Character.Humanoid.Health ~= 0 and v.Character.PrimaryPart ~= nil then
            local ScreenPosition, Visible = __Camera:WorldToViewportPoint(v.Character.HumanoidRootPart.Position)
            
			if Visible then
				local Distance = (Vector2.new(__Mouse.X, __Mouse.Y) - Vector2.new(ScreenPosition.X, ScreenPosition.Y)).Magnitude

				if Distance < ClosestDistance then  
					ClosestPlayer = v
					ClosestDistance = Distance     
				end
			end
        end
    end
    return ClosestPlayer
end

__MainSection:CreateToggle("Silent Aim", nil, function(SilentAimToggled : boolean?)
    if not SilentAimToggled then
        return 
    end

    local __OldIndex 
    __OldIndex = hookmetamethod(game, "__index", newcclosure(function(Self, Index) 
        if (Self:IsA("Mouse")) and (Index == "Hit") or (Index == "Target") then
            return (Index == "Hit" and GetClosestPlayer().Character.HumanoidRootPart.CFrame + Vector3.new(GetClosestPlayer().Character.HumanoidRootPart.Velocity.X / 5, GetClosestPlayer().Character.HumanoidRootPart.Velocity.X / 10, GetClosestPlayer().Character.HumanoidRootPart.Velocity.Z / 5))
        end
        return __OldIndex(Self, Index)
    end))
end)

print("executed")
