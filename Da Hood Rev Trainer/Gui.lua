-- Repport any bugs to sinkZ#6982 [me]

--[[
	Build : @none
	Date : 2023 - 02 - 07 [22:22]
	Finished Date : 2023 - 02 - 07 [19:04]
	Things to fix : clear
	Things to add : Esp?
	Update : Date 2023 - 02 - 08 [14:07] : Won't fix visibilty checks since it deosn't want to cooperate. Aimbot prediction kinda fixed? 	
	Update : Date 2023 - 02 - 08 [19:02] : {
		-
		-Updates
		Updated Aimbot Prediction ( both Aimlock and Silent Aim )
		Updated Fps drops for Aimlock
		
		-Adds
		Added Anti Aimbot ( both Aimlock And Silent Aim )
		Added Prediction Slider ( 1 - 4 )
		Added TargetPart Selection ( Head, HumanoidRootPart, LowerTorso, RightLowerArm, LeftLowerArm, RightFoot, LeftFoot ) 
		
		
	}
	Update : 2023 - 02 - 08 [14:32] : {
		-
		-Updates
		Updated / Fixed line 89 Error : Attempt to index nil with Character
		-Adds
		Added Comments to Function Arguments 
	}
	
]]

if not game:IsLoaded() then
    game.Loaded:Wait()
end

local Get = setmetatable({},{
    __index = function(n, k)
        return game:GetService(k)
    end,
})

getgenv().Settings = {
    Enabled = false,

    __TargetPart = "",

    __SilentAimToggled = false,
    __AimlockToggled = false,
    __AllowAimlock = false,
    __AntiAim = false,

    __PredictionAmount = 0,
    __FakeYVector = -50,
    __FpsUnlockerToggled = false,

    __HighlightEspToggled = false
}

local Config = {
    WindowName = " [ Da Hood Rev Trainer ] | [ Made By : sinkZ#6982 ] ",
    Color = Color3.fromRGB(255,128,64),
    Keybind = Enum.KeyCode.RightBracket
}

local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/AlexR32/Bracket/main/BracketV3.lua"))()
local Window = Library:CreateWindow(Config, Get.CoreGui)

local __Tab1 = Window:CreateTab("Main")
local __Tab2 = Window:CreateTab("UI Settings")

local __AimSection = __Tab1:CreateSection("Aimbots")
local __MiscSection = __Tab1:CreateSection("Miscellaneous")
local __SettingsSection = __Tab2:CreateSection("Settings Section")

local RunService = Get.RunService
local UserInputService = Get.UserInputService
local Players = Get.Players
local Player = Players.LocalPlayer
local Character = Player.Character or Player.CharacterAdded:Wait()

local Mouse = Player:GetMouse()
local Camera = workspace.CurrentCamera

PlayerLoaded = function(TargetPlayer : Instance?) 
    if TargetPlayer ~= Player
    and TargetPlayer.Character
    and TargetPlayer.Character:FindFirstChild("HumanoidRootPart")
    and TargetPlayer.Character:FindFirstChild("Humanoid")
    and TargetPlayer.Character.Humanoid.Health ~= 0 then
        return true 
    else
        return false 
    end
end

GetClosestPlayer = function()
    local ClosestPlayer = nil
    local ClosestDistance = math.huge

    for i,v in next, Players:GetPlayers() do 
        if PlayerLoaded(v) then 
            local ScreenPosition, OnScreen = Camera:WorldToViewportPoint(v.Character.HumanoidRootPart.Position) 
            local Distance = (Vector2.new(Mouse.X, Mouse.Y) - Vector2.new(ScreenPosition.X, ScreenPosition.Y)).Magnitude

            if OnScreen then
                if Distance < ClosestDistance then  
                    ClosestPlayer = v
                    ClosestDistance = Distance    
                end
            end
        end
    end
    return (ClosestPlayer)
end

SetPrediction = function()
    return (GetClosestPlayer().Character.HumanoidRootPart.Velocity / getgenv().Settings.__PredictionAmount)
end

__AntiAimKin = function()
    local oldVelocity = Character.HumanoidRootPart.Velocity
    Character.HumanoidRootPart.Velocity = Vector3.new(oldVelocity.X, getgenv().Settings.__FakeYVector, oldVelocity.Z)
    Character.HumanoidRootPart.Velocity = Vector3.new(oldVelocity.X, oldVelocity.Y, oldVelocity.Z)
    Character.HumanoidRootPart.Velocity = Vector3.new(oldVelocity.X, getgenv().Settings.__FakeYVector, oldVelocity.Z)
    Character:WaitForChild("Humanoid", 100).HipHeight = math.random(1.2, 4)
end

local PredictionSlider = __AimSection:CreateSlider("Aimbot Prediction Strength", 1, 4, nil, false, function(PredictionValue : number?)
    getgenv().Settings.__PredictionAmount = PredictionValue * 2
end)

PredictionSlider:SetValue(4)

local SilentAimToggle = __AimSection:CreateToggle("Silent Aim", nil, function(SilentAimToggled : boolean?)
    getgenv().Settings.__SilentAimToggled = SilentAimToggled 

    local OldIndex = nil   
     OldIndex = hookmetamethod(game, "__index", newcclosure(function(Self, Index) 
        if Self:IsA("Mouse") and getgenv().Settings.__SilentAimToggled and Index == "Hit" or Index == "Target" then
            return (Index == "Hit" and GetClosestPlayer().Character:FindFirstChild(getgenv().Settings.__TargetPart).CFrame + SetPrediction()) -- Temp fix for shitty prediction calculations : i don't kno math
        end
        return OldIndex(Self, Index)
    end))
end)

local AimlockToggle = __AimSection:CreateToggle("Aimlock", nil, function(AimlockToggled : boolean?)
    getgenv().Settings.__AllowAimlock = AimlockToggled
end)

local TargetDropDown = __AimSection:CreateDropdown("Target Part", {"Head", "HumanoidRootPart", "LowerTorso", "RightLowerArm", "LeftLowerArm", "RightFoot", "LeftFoot"}, function(StringObject)
    getgenv().Settings.__TargetPart = StringObject
end)

TargetDropDown:SetOption("Head")

UserInputService.InputBegan:Connect(function(Input : Instance?, GameProcessed : boolean?)
    if Input.UserInputType == Enum.UserInputType.MouseButton2 and not GameProcessed then
        getgenv().Settings.__AimlockToggled = true

        while task.wait() do
            if not (getgenv().Settings.__AllowAimlock) then break end
            if not (getgenv().Settings.__AimlockToggled) then break end
            Camera.CFrame = CFrame.new(Camera.CFrame.Position, GetClosestPlayer().Character:FindFirstChild(getgenv().Settings.__TargetPart).Position + SetPrediction()) 
        end
    end
end)

UserInputService.InputEnded:Connect(function(Input : Instance?) 
    if Input.UserInputType == Enum.UserInputType.MouseButton2 then
        getgenv().Settings.__AimlockToggled = false
    end
end)

local UnlockFpsToggle = __MiscSection:CreateToggle("Unlock Fps", nil, function(FpsUnlockerToggled : boolean?)
    getgenv().Settings.__FpsUnlockerToggled = FpsUnlockerToggled 

    if getgenv().Settings.__FpsUnlockerToggled then
        setfpscap(240)
    else
        setfpscap(60)
    end
end)

local AntiAimToggle = __MiscSection:CreateToggle("Anti Aim", nil, function(AntiAimToggled : boolean?)
    getgenv().Settings.__AntiAim = AntiAimToggled

    if not getgenv().Settings.__AntiAim then
		Character.Humanoid.HipHeight = 2
	end

    while task.wait() do
        if not getgenv().Settings.__AntiAim then break end
        __AntiAimKin()
    end
end)

local Toggle3 = __SettingsSection:CreateToggle("UI Toggle", nil, function(State : boolean?)
	Window:Toggle(State)
end)

Toggle3:CreateKeybind(tostring(Config.Keybind):gsub("Enum.KeyCode.", ""), function(Key : string?)
	Config.Keybind = Enum.KeyCode[Key]
end)

Toggle3:SetState(true)

local Colorpicker3 = __SettingsSection:CreateColorpicker("UI Color", function(Color : Color3?)
	Window:ChangeColor(Color)
end)
Colorpicker3:UpdateColor(Config.Color)

local Dropdown3 = __SettingsSection:CreateDropdown("Image", {"Default","Hearts","Abstract","Hexagon","Circles","Lace With Flowers","Floral"}, function(Name : string?)
	if Name == "Default" then
		Window:SetBackground("2151741365")
	elseif Name == "Hearts" then
		Window:SetBackground("6073763717")
	elseif Name == "Abstract" then
		Window:SetBackground("6073743871")
	elseif Name == "Hexagon" then
		Window:SetBackground("6073628839")
	elseif Name == "Circles" then
		Window:SetBackground("6071579801")
	elseif Name == "Lace With Flowers" then
		Window:SetBackground("6071575925")
	elseif Name == "Floral" then
		Window:SetBackground("5553946656")
	end
end)
Dropdown3:SetOption("Default")

local Colorpicker4 = __SettingsSection:CreateColorpicker("Color", function(Color : Color3?)
	Window:SetBackgroundColor(Color)
end)
Colorpicker4:UpdateColor(Color3.new(1,1,1))

local Slider3 = __SettingsSection:CreateSlider("Transparency",0,1,nil,false, function(Value : number?)
	Window:SetBackgroundTransparency(Value)
end)
Slider3:SetValue(0)

local Slider4 = __SettingsSection:CreateSlider("Tile Scale",0,1,nil,false, function(Value : number?)
	Window:SetTileScale(Value)
end)
Slider4:SetValue(0.5)

print("Executed sinkZ#6982's Rev Trainer Script")
